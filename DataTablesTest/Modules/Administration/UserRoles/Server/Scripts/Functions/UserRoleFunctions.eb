<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ebase version="5.3.2">
            
    
    <script contentType="Javascript" dateCreated="2018-02-02T13:09:00.333Z" id="UserRoleFunctions" preferredComponentPath="/Modules/Administration/UserRoles/DataTablesTest_UserRoles">
                        
        
        <scriptText>importPackage(com.ebasetech.xi.api);
importPackage(com.ebasetech.xi.services);

// insert a new entry
function addUserRole() {
   // insert user role row into table
   tables.userRoles.insertRow();      
   // sort the table so that the new row appears at the top
   tables.userRoles.sort(tables.userRoles.user_id);
}

// delete user role from the user_roles table
function deleteUserRole() {
   tables.userRoles.deleteRow();
}

// load user role table from database
function loadUserRoles() {
	 tables.userRoles.fetchTable();
}

// save user roles to database
function saveUserRoles() {
   // save user roles to database
   tables.userRoles.updateTable();

   // issue a message
   controls.saveMessage.addInfoMessage('All changes saved');	
}

// This function overrides the header component function of the same name. It is always available if you want to adjust the screen layout or controls
// to match a particular device screen size. A component field called range always holds the latest width of the users screen. If you don't care about
// changing controls etc. then you can just delete this function...in which case the component will call its own function of the same name, that does
// nothing.
// The reason for this function is that having both a both a table, and repeater based on the that table, will stop validation processing working. This
// is because the repeater below the table will always submit its column value, which will overwrite any change made in the table.
function breakpointRangeChanged() {
   if (fields.aheader__range.value == 'sm' || fields.aheader__range.value == 'xs') {
		  // show table for md, lg and xl devices
	    controls.userRolesTablePanel.hide();
	    controls.userRolesRepeaterPanel.show();
	 }
	 else {
	 	 // show repeater for xs and sm devices
	    controls.userRolesTablePanel.show();
	    controls.userRolesRepeaterPanel.hide();
	 }
}

// remove duplicate user role rows
function deleteDuplicateUserRoles() {
   // sort the table into user, role order
   tables.userRoles.sort([tables.userRoles.user_id,tables.userRoles.role_id]);
   var r = tables.userRoles.rows;
   // set previous row column values
   var pu, pr = -1;
   // loop through and delete duplicates
   while (r.next()) {
      if (tables.userRoles.user_id.value == pu &amp;&amp; tables.userRoles.role_id.value == pr) {
         // this row is a duplicate of the previous one, do delete it
         tables.userRoles.deleteRow();
      }
      else {
         // not a duplcate, so set previous row column values
         pu = tables.userRoles.user_id.value;
         pr = tables.userRoles.role_id.value;
      }
   }
   // replace sort order
   tables.userRoles.sort(tables.userRoles.user_id);
}

// delete rows where either the user or the role is null
function deleteBlankUserRoles() {
	 var r = tables.userRoles.rows;
	 while (r.next()) {
	    if (tables.userRoles.user_id.value==null || tables.userRoles.role_id.value==null) tables.userRoles.deleteRow();
	 }
}
</scriptText>
                    
    
    </script>
        

</ebase>
